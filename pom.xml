<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>uk.gov.companieshouse</groupId>
		<artifactId>companies-house-parent</artifactId>
		<version>1.3.1</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<artifactId>officer-delta-processor</artifactId>
	<version>unversioned</version>
	<name>officer-delta-processor</name>
	<description>The Officer Delta Processor is responsible for reading and handling from the officer-delta kafka topic.</description>
	<packaging>jar</packaging>
	<properties>
		<skip.integration.tests>false</skip.integration.tests>
		<skip.unit.tests>false</skip.unit.tests>

		<ch-kafka.version>1.4.8</ch-kafka.version>
		<kafka-models.version>1.0.31</kafka-models.version>
		<private.sdk.version>2.0.324</private.sdk.version>
		<spring.boot.version>2.7.14</spring.boot.version>

		<!-- Logging -->
		<structured-logging.version>1.9.25</structured-logging.version>
		<api-sdk-manager-java-library.version>1.0.11</api-sdk-manager-java-library.version>

		<!-- Test -->
		<equalsverifier.version>3.1.9</equalsverifier.version>
		<testcontainers.version>1.18.1</testcontainers.version>
		<system-lambda.version>1.2.1</system-lambda.version>
		<maven-surefire-plugin.version>3.0.0</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>3.0.0</maven-failsafe-plugin.version>
		<io-cucumber.version>7.11.2</io-cucumber.version>
		<wiremock.standalone.version>2.35.0</wiremock.standalone.version>
		<maven-build-helper-plugin.version>3.4.0</maven-build-helper-plugin.version>
		<maven-resources-plugin.version>3.3.1	</maven-resources-plugin.version>

		<!-- Maven -->
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>

		<!-- Sonar dependency -->
		<sonar.projectKey>uk.gov.companieshouse:officer-delta-processor</sonar.projectKey>
		<sonar.sources>src/main</sonar.sources>
		<sonar.tests>src/test,src/itest</sonar.tests>
		<sonar.verbose>true</sonar.verbose>
		<sonar.coverage.jacoco.xmlReportPaths>
			${project.basedir}/target/site/jacoco/jacoco.xml,
			${project.basedir}/target/site/jacoco-it/jacoco.xml
		</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.jacoco.reports>${project.basedir}/target/site</sonar.jacoco.reports>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-bom</artifactId>
				<version>${io-cucumber.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.yaml</groupId>
					<artifactId>snakeyaml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-to-slf4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>uk.gov.companieshouse</groupId>
			<artifactId>structured-logging</artifactId>
			<version>${structured-logging.version}</version>
		</dependency>
		<dependency>
			<groupId>uk.gov.companieshouse</groupId>
			<artifactId>ch-kafka</artifactId>
			<version>${ch-kafka.version}</version>
		</dependency>
		<dependency>
			<groupId>uk.gov.companieshouse</groupId>
			<artifactId>kafka-models</artifactId>
			<version>${kafka-models.version}</version>
		</dependency>
		<dependency>
			<groupId>uk.gov.companieshouse</groupId>
			<artifactId>private-api-sdk-java</artifactId>
			<version>${private.sdk.version}</version>
		</dependency>
		<dependency>
			<groupId>uk.gov.companieshouse</groupId>
			<artifactId>api-sdk-manager-java-library</artifactId>
			<version>${api-sdk-manager-java-library.version}</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>nl.jqno.equalsverifier</groupId>
			<artifactId>equalsverifier</artifactId>
			<version>${equalsverifier.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>kafka</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>4.1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.stefanbirkner</groupId>
			<artifactId>system-lambda</artifactId>
			<version>${system-lambda.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit-platform-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-console</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.scala-lang</groupId>
					<artifactId>scala-library</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock-jre8</artifactId>
			<version>${wiremock.standalone.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.conscrypt</groupId>
					<artifactId>conscrypt-openjdk-uber</artifactId>
				</exclusion>
				<exclusion>
					<groupId>net.javacrumbs.json-unit</groupId>
					<artifactId>json-unit-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.github.jknack</groupId>
					<artifactId>handlebars</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.github.jknack</groupId>
					<artifactId>handlebars-helpers</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-fileupload</groupId>
					<artifactId>commons-fileupload</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-xml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring.boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution model. -->
							<destFile>${sonar.jacoco.reports}/jacoco.exec</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${sonar.jacoco.reports}/jacoco.exec</dataFile>
							<outputDirectory>${sonar.jacoco.reports}/jacoco</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${sonar.jacoco.reports}/jacoco-it.exec</destFile>
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${sonar.jacoco.reports}/jacoco-it.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${sonar.jacoco.reports}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${maven-build-helper-plugin.version}</version>
				<executions>
					<execution>
						<id>add-integration-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/itest/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<argLine>-Dfile.encoding=UTF-8</argLine>
					<argLine>${surefireArgLine}</argLine>
					<excludes>
						<exclude>**/*ITest.java</exclude>
					</excludes>
					<skipTests>${skip.unit.tests}</skipTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<properties>
						<property>
							<name>listener</name>
							<value>org.sonar.java.jacoco.JUnitListener</value>
						</property>
					</properties>
					<argLine>-Dfile.encoding=UTF-8</argLine>
					<argLine>${failsafeArgLine}</argLine>
					<classesDirectory>${project.build.outputDirectory}</classesDirectory>
					<skipITs>${skip.integration.tests}</skipITs>
					<includes>
						<include>**/*ITest.java</include>
					</includes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/test-classes</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/itest/resources</directory>
									<includes>
										<include>**/*.*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>3.3.2</version>
			</plugin>
		</plugins>
	</build>
</project>
